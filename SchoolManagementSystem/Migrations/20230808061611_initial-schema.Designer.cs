// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolManagementSystem.Entities;

#nullable disable

namespace SchoolManagementSystem.Migrations
{
    [DbContext(typeof(TimeSheetDbContext))]
    [Migration("20230808061611_initial-schema")]
    partial class initialschema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("SchoolManagementSystem.Entities.AttenStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("StudentId")
                        .HasColumnType("TEXT");

                    b.Property<uint>("TimeShift")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Attens");
                });

            modelBuilder.Entity("SchoolManagementSystem.Entities.Department", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("DptManager")
                        .HasColumnType("TEXT");

                    b.Property<string>("DptName")
                        .HasColumnType("TEXT");

                    b.Property<string>("DptPhone")
                        .HasColumnType("TEXT");

                    b.Property<string>("DptPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("SchoolManagementSystem.Entities.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("TeacherId")
                        .HasColumnType("TEXT");

                    b.Property<uint>("TimeShift")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("SchoolManagementSystem.Entities.ScoreStudent", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Average")
                        .HasColumnType("TEXT");

                    b.Property<string>("BigData")
                        .HasColumnType("TEXT");

                    b.Property<string>("CShap")
                        .HasColumnType("TEXT");

                    b.Property<string>("English")
                        .HasColumnType("TEXT");

                    b.Property<string>("Grade")
                        .HasColumnType("TEXT");

                    b.Property<string>("Java")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Python")
                        .HasColumnType("TEXT");

                    b.Property<string>("Total")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ScoreStudents");
                });

            modelBuilder.Entity("SchoolManagementSystem.Entities.Student", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("TEXT");

                    b.Property<string>("Department")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sex")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SchoolManagementSystem.Entities.Teacher", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<string>("Saray")
                        .HasColumnType("TEXT");

                    b.Property<string>("Subject")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserAccountId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserAccountId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("SchoolManagementSystem.Entities.UserAccount", b =>
                {
                    b.Property<int>("UserAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("UserAccountId");

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("SchoolManagementSystem.Entities.AttenStudent", b =>
                {
                    b.HasOne("SchoolManagementSystem.Entities.Student", null)
                        .WithMany("Attens")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("SchoolManagementSystem.Entities.Log", b =>
                {
                    b.HasOne("SchoolManagementSystem.Entities.Teacher", null)
                        .WithMany("Logs")
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("SchoolManagementSystem.Entities.Teacher", b =>
                {
                    b.HasOne("SchoolManagementSystem.Entities.UserAccount", "UserAccount")
                        .WithMany()
                        .HasForeignKey("UserAccountId");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("SchoolManagementSystem.Entities.Student", b =>
                {
                    b.Navigation("Attens");
                });

            modelBuilder.Entity("SchoolManagementSystem.Entities.Teacher", b =>
                {
                    b.Navigation("Logs");
                });
#pragma warning restore 612, 618
        }
    }
}
